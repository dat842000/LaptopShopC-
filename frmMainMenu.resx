<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Home.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>